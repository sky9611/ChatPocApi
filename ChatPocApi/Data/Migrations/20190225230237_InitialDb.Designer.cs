// <auto-generated />
using System;
using ChatPocApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatPocApi.Migrations
{
    [DbContext(typeof(ChatPocContext))]
    [Migration("20190225230237_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChatPocApi.Data.Entities.Chat", b =>
                {
                    b.Property<int>("User1Id");

                    b.Property<int>("User2Id");

                    b.Property<int?>("UserID");

                    b.HasKey("User1Id", "User2Id");

                    b.HasIndex("User2Id");

                    b.HasIndex("UserID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ChatPocApi.Data.Entities.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChatUser1Id");

                    b.Property<int?>("ChatUser2Id");

                    b.Property<string>("Content");

                    b.Property<DateTime>("MsgDate");

                    b.Property<int?>("RecevierUserID");

                    b.Property<int?>("SenderUserID");

                    b.HasKey("MessageID");

                    b.HasIndex("RecevierUserID");

                    b.HasIndex("SenderUserID");

                    b.HasIndex("ChatUser1Id", "ChatUser2Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatPocApi.Data.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Profileicture");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatPocApi.Data.Entities.Chat", b =>
                {
                    b.HasOne("ChatPocApi.Data.Entities.User", "User1")
                        .WithMany()
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChatPocApi.Data.Entities.User", "User2")
                        .WithMany()
                        .HasForeignKey("User2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChatPocApi.Data.Entities.User")
                        .WithMany("Chats")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ChatPocApi.Data.Entities.Message", b =>
                {
                    b.HasOne("ChatPocApi.Data.Entities.User", "Recevier")
                        .WithMany()
                        .HasForeignKey("RecevierUserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChatPocApi.Data.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderUserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChatPocApi.Data.Entities.Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatUser1Id", "ChatUser2Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
